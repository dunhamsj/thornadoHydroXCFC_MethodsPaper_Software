#!/usr/bin/env bash

# Create file ${outfile} containing a list of plotfiles that:
# 1.) Are not corrupted
# 2.) Are not duplicates

paperDir=/mnt/shared/work/thornadoHydroXCFC_MethodsPaper

outdir=${paperDir}/thornadoHydroXCFC_MethodsPaper_Data
outdir+=/adiabaticCollapse/processedData
if [ ! -d ${outdir} ]; then
  mkdir -p ${outdir}
fi

plotFileBaseName=AdiabaticCollapse_XCFC.plt

dataDirectoryRoot=/mnt/lump/data/adiabaticCollapse_XCFC

getFiles() {

  suffix=$1

  dataDirectory=${dataDirectoryRoot}/AdiabaticCollapse_XCFC${suffix}
  outfile=${outdir}/validPlotfiles${suffix}.dat

  echo "# Filename:" ${outfile} > ${outfile}
  echo "# Valid plotfiles and associated times." >> ${outfile}
  echo "# Generated by" ${PWD}/${0} "on" $(date) >> ${outfile}
  echo "# AbsolutePathToPlotfile Time/ms"        >> ${outfile}

  num=0
  for plotfile in ${dataDirectory}/${plotFileBaseName}* ; do
    num=$((num+1))
  done
  tot=${num}

  num=0
  for plotfile in ${dataDirectory}/${plotFileBaseName}* ; do
    num=$((num+1))
    echo ${num}/${tot}
    skip="no"
    if [[ ${plotfile} == *".old."* ]]; then skip="yes"; fi
    for lev in ${plotfile}/Level* ; do
      if ! test -f ${lev}/Cell_H; then
        skip="yes"
      fi
    done
    if [[ ${skip} == "no" ]]; then
      time=`cat ${plotfile}/Header | sed '65q;d'`
      echo ${plotfile} ${time} >> ${outfile}
    fi
    if [[ ${skip} == "yes" ]]; then
      echo Skipping ${plotfile}
    fi
  done

  chmod 444 ${outfile}
}

getFiles _AMR_dr0.25km
getFiles _AMR_dr0.50km
getFiles _AMR_dr1.00km
getFiles _Uni_dr0.50km
getFiles _Uni_dr1.00km
getFiles _AMR_dr0.25km_nLevels04
getFiles _AMR_dr0.25km_HLLC
