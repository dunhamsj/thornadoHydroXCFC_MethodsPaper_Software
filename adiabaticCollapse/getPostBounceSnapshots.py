#!/usr/bin/env python3

from datetime import datetime
import numpy as np

import globalVariables as gv

from myUtilitiesModule import getPlotfileNumberArray, getMesh_1d, getFieldData, readShockRadiusSnapshotsFile

plotfileDirectoryRoot \
  = gv.dataDirectory + 'adiabaticCollapse/'
dataDirectory \
  = plotfileDirectoryRoot + 'processedData/'

ID = 'AdiabaticCollapse_XCFC'

plotfileNameRoot = ID + '.plt'

suffix = [ '_AMR_dr0.25km', \
           '_AMR_dr0.50km', \
           '_AMR_dr1.00km', \
           '_Uni_dr0.50km', \
           '_Uni_dr1.00km', \
           '_AMR_dr0.25km_nLevels04', \
           '_AMR_dr0.25km_HLLC' ]

fields = [ 'PF_D', 'AF_T', 'AF_Ye', 'AF_S' ]

for s in range( len( suffix ) ) :

    print( '\n  Running getPostBounceSnapshots for {:}' \
           .format( 'AdiabaticCollapse_XCFC{:}'.format( suffix[s] ) ) )
    print(   '  ----------------------------------' )

    snapshots, tmtb, Rsh \
      = readShockRadiusSnapshotsFile \
          ( dataDirectory + 'ShockRadiusSnapshots{:}.dat'.format( suffix[s] ) )

    plotfileDirectory \
      = plotfileDirectoryRoot + '{:}{:}/'.format( ID, suffix[s] )

    plotfileNumberArray \
      = getPlotfileNumberArray \
          ( plotfileDirectory,\
            plotfileNameRoot )

    for iSS in range( snapshots.shape[0] ):

        ss = str( plotfileNumberArray[snapshots[iSS]] ).zfill( 8 )

        print( '      {:}'.format( ss ) )

        plotfileName \
          = plotfileDirectory + '{:}{:}'.format( plotfileNameRoot, ss )

        X1, X2, X3, dX1, dX2, dX3, xL, xH \
          = getMesh_1d( plotfileName, 'spherical' )

        for i in range( len( fields ) ):

            data, dataUnits \
              = getFieldData( plotfileName, \
                              fields[i], \
                              X1, X2, X3, \
                              returnUnits = True )

            filename \
               = dataDirectory + '{:}_{:}_{:}.dat' \
                  .format( fields[i], suffix[s][1:], ss )
            header \
              = 'Filename: {:}\nGenerated by {:}\non {:}\nr [km], {:} [{:}]' \
                .format( filename, __file__, datetime.today(), fields[i], dataUnits )
            np.savetxt( filename, \
                        np.vstack( ( X1, data ) ), header = header )
            print( '        Saved {:}'.format( filename ) )

import os
os.system( 'rm -rf __pycache__ ' )
