#!/usr/bin/env python3

import os

from datetime import datetime
import numpy as np

import globalVariables as gv

from myUtilitiesModule import getPlotfileNumberArray, getMesh_1d

plotfileDirectoryRoot \
  = gv.dataDirectory + 'adiabaticCollapse/'
dataDirectory \
  = plotfileDirectoryRoot + 'processedData/'

suffix = [ '_AMR_dr0.25km', \
           '_AMR_dr0.50km', \
           '_AMR_dr1.00km', \
           '_AMR_dr0.25km_nLevels04', \
           '_AMR_dr0.25km_HLLC' ]

ID = 'AdiabaticCollapse_XCFC'
plotfileBaseName = ID + '.plt'

for s in range( len( suffix ) ):

    print( '\n  Running getMeshWidthVersusRadius for {:}' \
           .format( 'AdiabaticCollapse_XCFC{:}'.format( suffix[s] ) ) )
    print(   '  ------------------------------------' )
    data \
      = np.loadtxt( dataDirectory + 'validPlotfiles{:}.dat'.format( suffix[s] ), \
                    dtype = str )

    plotfileName = data[-1][0]

    X1, X2, X3, dX1, dX2, dX3, xL, xH, Time \
      = getMesh_1d( plotfileName, returnTime = True )

    filename \
      = dataDirectory + 'MeshWidthVersusRadius{:}.dat' \
        .format( suffix[s] )
    header \
      = 'Filename: {:}\nGenerated by {:}\non {:}\nTime {:.3e} ms\nX1_C [km], dr [km]' \
        .format( filename, __file__, datetime.today(), Time )
    np.savetxt( filename, \
                np.vstack( ( X1, dX1 ) ), header = header )
    os.system( 'chmod 444 {:}'.format( filename ) )
    print( '\n  Saved {:}'.format( filename ) )

#if ( __name__ == '__main__' ):
#    import matplotlib.pyplot as plt
#    plt.style.use( 'publication.sty' )
#    filename \
#      = dataDirectory + 'MeshWidthVersusRadius{:}.dat' \
#        .format( suffix[0] )
#    rc, dr = np.loadtxt( filename )
#    plt.semilogx( rc, dr )
#    plt.xlabel( 'Radius [km]' )
#    plt.ylabel( 'dr [km]' )
#    plt.grid()
#    with open( filename, 'r' ) as f:
#        for line in f.readlines() :
#            if ( 'Time' in line ):
#                x = line.split( ' ' )
#                time = x[2]
#    plt.title( '{:}, Time = {:.3e} ms' \
#               .format( suffix[0][1:], np.float64( time ) ) )
#    plt.show()
#    plt.savefig( 'fig.MeshWidthVersusRadius{:}.png'.format( suffix[0] ), \
#                 dpi = 300 )
os.system( 'rm -rf __pycache__ ' )
